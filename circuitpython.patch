diff --git a/shared-module/onewireio/OneWire.c b/shared-module/onewireio/OneWire.c
index aeb4dcb00..53ff93c85 100644
--- a/shared-module/onewireio/OneWire.c
+++ b/shared-module/onewireio/OneWire.c
@@ -28,6 +28,7 @@
 #include "shared-bindings/onewireio/OneWire.h"
 #include "shared-bindings/microcontroller/__init__.h"
 #include "shared-bindings/digitalio/DigitalInOut.h"
+#include "ports/raspberrypi/sdk/src/rp2_common/hardware_timer/include/hardware/timer.h"
 
 // Durations are taken from here: https://www.maximintegrated.com/en/app-notes/index.mvp/id/126
 
@@ -54,11 +55,11 @@ void common_hal_onewireio_onewire_deinit(onewireio_onewire_obj_t *self) {
 bool common_hal_onewireio_onewire_reset(onewireio_onewire_obj_t *self) {
     common_hal_mcu_disable_interrupts();
     common_hal_digitalio_digitalinout_switch_to_output(&self->pin, false, DRIVE_MODE_OPEN_DRAIN);
-    common_hal_mcu_delay_us(480);
-    common_hal_digitalio_digitalinout_switch_to_input(&self->pin, PULL_NONE);
     common_hal_mcu_delay_us(70);
+    common_hal_digitalio_digitalinout_switch_to_input(&self->pin, PULL_NONE);
+    common_hal_mcu_delay_us(9);
     bool value = common_hal_digitalio_digitalinout_get_value(&self->pin);
-    common_hal_mcu_delay_us(410);
+    common_hal_mcu_delay_us(40);
     common_hal_mcu_enable_interrupts();
     return value;
 }
@@ -66,14 +67,14 @@ bool common_hal_onewireio_onewire_reset(onewireio_onewire_obj_t *self) {
 bool common_hal_onewireio_onewire_read_bit(onewireio_onewire_obj_t *self) {
     common_hal_mcu_disable_interrupts();
     common_hal_digitalio_digitalinout_switch_to_output(&self->pin, false, DRIVE_MODE_OPEN_DRAIN);
-    common_hal_mcu_delay_us(6);
+    asm volatile("nop\nnop\nnop\nnop\nnop\nnop");
     common_hal_digitalio_digitalinout_switch_to_input(&self->pin, PULL_NONE);
     // TODO(tannewt): Test with more devices and maybe make the delays
     // configurable. This should be 9 by the datasheet but all bits read as 1
     // then.
-    common_hal_mcu_delay_us(6);
+    asm volatile("nop\nnop\nnop\nnop\nnop\nnop\nnop\nnop");
     bool value = common_hal_digitalio_digitalinout_get_value(&self->pin);
-    common_hal_mcu_delay_us(55);
+    common_hal_mcu_delay_us(12);
     common_hal_mcu_enable_interrupts();
     return value;
 }
@@ -82,8 +83,14 @@ void common_hal_onewireio_onewire_write_bit(onewireio_onewire_obj_t *self,
     bool bit) {
     common_hal_mcu_disable_interrupts();
     common_hal_digitalio_digitalinout_switch_to_output(&self->pin, false, DRIVE_MODE_OPEN_DRAIN);
-    common_hal_mcu_delay_us(bit? 6 : 60);
-    common_hal_digitalio_digitalinout_switch_to_input(&self->pin, PULL_NONE);
-    common_hal_mcu_delay_us(bit? 64 : 10);
+    if (bit) {
+        busy_wait_us_32(1);
+        common_hal_digitalio_digitalinout_switch_to_input(&self->pin, PULL_NONE);
+        busy_wait_us_32(14);
+    } else{
+        busy_wait_us_32(10);
+        common_hal_digitalio_digitalinout_switch_to_input(&self->pin, PULL_NONE);
+        busy_wait_us_32(5);
+    }
     common_hal_mcu_enable_interrupts();
 }
